

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jan  8 00:12:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  0088                     	;# 
    58  0089                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76                           
    77                           	psect	idataCOMMON
    78  0126                     __pidataCOMMON:	
    79                           
    80                           ;initializer for _DATA_LENGTH
    81  0126  3408               	retlw	8
    82  0127  3400               	retlw	0
    83  000B                     _INTCONbits	set	11
    84  000C                     _PIR1bits	set	12
    85  001A                     _RCREG	set	26
    86  0019                     _TXREG	set	25
    87  00C4                     _CREN	set	196
    88  005F                     _GIE	set	95
    89  0030                     _RB0	set	48
    90  0031                     _RB1	set	49
    91  0034                     _RB4	set	52
    92  0035                     _RB5	set	53
    93  00C7                     _SPEN	set	199
    94  008C                     _PIE1bits	set	140
    95  0099                     _SPBRG	set	153
    96  0086                     _TRISB	set	134
    97  0098                     _TXSTAbits	set	152
    98  04C2                     _BRGH	set	1218
    99  04C4                     _SYNC	set	1220
   100  043E                     _TRISC6	set	1086
   101  043F                     _TRISC7	set	1087
   102  04C5                     _TXEN	set	1221
   103  040F                     _nRBPU	set	1039
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  0015                     start_initialization:	
   109  0015                     __initialization:	
   110                           
   111                           ; Clear objects allocated to COMMON
   112  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   113  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   114  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   115  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   116                           
   117                           ; Clear objects allocated to BANK0
   118  0019  1383               	bcf	3,7	;select IRP bank0
   119  001A  3020               	movlw	low __pbssBANK0
   120  001B  0084               	movwf	4
   121  001C  303C               	movlw	low (__pbssBANK0+28)
   122  001D  120A  118A  2118  120A  118A  	fcall	clear_ram0
   123                           
   124                           ; Initialize objects allocated to COMMON
   125  0022  120A  118A  2126  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   126  0027  00FA               	movwf	__pdataCOMMON& (0+127)
   127  0028  120A  118A  2127   	fcall	__pidataCOMMON+1	;fetch initializer
   128  002B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   129  002C                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  002C                     __end_of__initialization:	
   133  002C  0183               	clrf	3
   134  002D  120A  118A  2830   	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMMON
   137  0076                     __pbssCOMMON:	
   138  0076                     _sendFlg:	
   139  0076                     	ds	2
   140  0078                     _dataIn:	
   141  0078                     	ds	1
   142  0079                     _serialData:	
   143  0079                     	ds	1
   144                           
   145                           	psect	dataCOMMON
   146  007A                     __pdataCOMMON:	
   147  007A                     _DATA_LENGTH:	
   148  007A                     	ds	2
   149                           
   150                           	psect	bssBANK0
   151  0020                     __pbssBANK0:	
   152  0020                     _data:	
   153  0020                     	ds	26
   154  003A                     _i:	
   155  003A                     	ds	2
   156                           
   157                           	psect	clrtext
   158  0118                     clear_ram0:	
   159                           ;	Called with FSR containing the base address, and
   160                           ;	W with the last address+1
   161                           
   162  0118  0064               	clrwdt	;clear the watchdog before getting into this loop
   163  0119                     clrloop0:	
   164  0119  0180               	clrf	0	;clear RAM location pointed to by FSR
   165  011A  0A84               	incf	4,f	;increment pointer
   166  011B  0604               	xorwf	4,w	;XOR with final address
   167  011C  1903               	btfsc	3,2	;have we reached the end yet?
   168  011D  3400               	retlw	0	;all done for this memory range, return
   169  011E  0604               	xorwf	4,w	;XOR again to restore value
   170  011F  2919               	goto	clrloop0	;do the next byte
   171                           
   172                           	psect	cstackCOMMON
   173  0070                     __pcstackCOMMON:	
   174  0070                     ?_catchInterrupts:	
   175  0070                     ??_catchInterrupts:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_UART_Initialization:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ?_portBConfiguration:	
   182                           ; 0 bytes @ 0x0
   183                           
   184                           
   185                           ; 0 bytes @ 0x0
   186  0070                     	ds	6
   187                           
   188                           	psect	cstackBANK0
   189  003C                     __pcstackBANK0:	
   190  003C                     ??_UART_Initialization:	
   191  003C                     ??_portBConfiguration:	
   192                           ; 0 bytes @ 0x0
   193                           
   194  003C                     ?_main:	
   195                           ; 0 bytes @ 0x0
   196                           
   197  003C                     main@argc:	
   198                           ; 2 bytes @ 0x0
   199                           
   200                           
   201                           ; 2 bytes @ 0x0
   202  003C                     	ds	2
   203  003E                     main@argv:	
   204                           
   205                           ; 2 bytes @ 0x2
   206  003E                     	ds	2
   207  0040                     ??_main:	
   208                           
   209                           ; 0 bytes @ 0x4
   210  0040                     	ds	2
   211  0042                     main@x:	
   212                           
   213                           ; 2 bytes @ 0x6
   214  0042                     	ds	2
   215                           
   216                           	psect	maintext
   217  0030                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 76 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;  argc            2    0[BANK0 ] int 
   226 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  x               2    6[BANK0 ] int 
   229 ;; Return value:  Size  Location     Type
   230 ;;                  2    0[BANK0 ] int 
   231 ;; Registers used:
   232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 17F/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   238 ;;      Params:         0       4       0       0       0
   239 ;;      Locals:         0       2       0       0       0
   240 ;;      Temps:          0       2       0       0       0
   241 ;;      Totals:         0       8       0       0       0
   242 ;;Total ram usage:        8 bytes
   243 ;; Hardware stack levels required when called:    2
   244 ;; This function calls:
   245 ;;		_UART_Initialization
   246 ;;		_portBConfiguration
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           
   253                           ;psect for function _main
   254  0030                     _main:	
   255                           
   256                           ;main.c: 77: UART_Initialization();
   257                           
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   260  0030  120A  118A  2104  120A  118A  	fcall	_UART_Initialization
   261                           
   262                           ;main.c: 79: portBConfiguration();
   263  0035  120A  118A  2120  120A  118A  	fcall	_portBConfiguration
   264  003A                     l737:	
   265                           ;main.c: 81: while(1) {
   266                           
   267                           
   268                           ;main.c: 82: RB0 = 0;
   269  003A  1283               	bcf	3,5	;RP0=0, select bank0
   270  003B  1303               	bcf	3,6	;RP1=0, select bank0
   271  003C  1006               	bcf	6,0	;volatile
   272                           
   273                           ;main.c: 83: if ((RB4 == 0 || RB5 == 0) && i == 0)
   274  003D  1E06               	btfss	6,4	;volatile
   275  003E  2841               	goto	l743
   276  003F  1A86               	btfsc	6,5	;volatile
   277  0040  2872               	goto	l763
   278  0041                     l743:	
   279  0041  083B               	movf	_i+1,w
   280  0042  043A               	iorwf	_i,w
   281  0043  1903               	btfsc	3,2
   282  0044  286A               	goto	l76
   283  0045  2872               	goto	l763
   284  0046                     l77:	
   285                           ;main.c: 84: {
   286                           ;main.c: 85: while(i < 26)
   287                           
   288                           
   289                           ;main.c: 86: {
   290                           ;main.c: 87: if((RB4==0)&&(RB5==1))
   291  0046  1E06               	btfss	6,4	;volatile
   292  0047  1E86               	btfss	6,5	;volatile
   293  0048  2855               	goto	l78
   294                           
   295                           ;main.c: 88: {
   296                           ;main.c: 89: data[i]=0;
   297  0049  083A               	movf	_i,w
   298  004A  3E20               	addlw	_data& (0+255)
   299  004B  0084               	movwf	4
   300  004C  1383               	bcf	3,7	;select IRP bank0
   301  004D  0180               	clrf	0
   302                           
   303                           ;main.c: 90: while((RB4==0)&&(RB5==1)){RB0 = 1;}
   304  004E  2850               	goto	l79
   305  004F                     l80:	
   306  004F  1406               	bsf	6,0	;volatile
   307  0050                     l79:	
   308  0050  1A06               	btfsc	6,4	;volatile
   309  0051  2864               	goto	l761
   310  0052  1A86               	btfsc	6,5	;volatile
   311  0053  284F               	goto	l80
   312  0054  2864               	goto	l761
   313  0055                     l78:	
   314                           ;main.c: 92: }
   315                           
   316                           ;main.c: 91: i++;
   317                           
   318                           
   319                           ;main.c: 93: else if ((RB4==1)&&(RB5==0))
   320  0055  1A06               	btfsc	6,4	;volatile
   321  0056  1A86               	btfsc	6,5	;volatile
   322  0057  286A               	goto	l76
   323                           
   324                           ;main.c: 94: {
   325                           ;main.c: 95: data[i]=1;
   326  0058  083A               	movf	_i,w
   327  0059  3E20               	addlw	_data& (0+255)
   328  005A  0084               	movwf	4
   329  005B  1383               	bcf	3,7	;select IRP bank0
   330  005C  0180               	clrf	0
   331  005D  0A80               	incf	0,f
   332                           
   333                           ;main.c: 96: while((RB4==1)&&(RB5==0)){RB0 = 1;}
   334  005E  2860               	goto	l86
   335  005F                     l87:	
   336  005F  1406               	bsf	6,0	;volatile
   337  0060                     l86:	
   338  0060  1E06               	btfss	6,4	;volatile
   339  0061  2864               	goto	l761
   340  0062  1E86               	btfss	6,5	;volatile
   341  0063  285F               	goto	l87
   342  0064                     l761:	
   343                           
   344                           ;main.c: 97: i++;
   345  0064  3001               	movlw	1
   346  0065  07BA               	addwf	_i,f
   347  0066  1803               	skipnc
   348  0067  0ABB               	incf	_i+1,f
   349  0068  3000               	movlw	0
   350  0069  07BB               	addwf	_i+1,f
   351  006A                     l76:	
   352  006A  3000               	movlw	0
   353  006B  023B               	subwf	_i+1,w
   354  006C  301A               	movlw	26
   355  006D  1903               	skipnz
   356  006E  023A               	subwf	_i,w
   357  006F  1C03               	skipc
   358  0070  2846               	goto	l77
   359                           
   360                           ;main.c: 98: }
   361                           ;main.c: 99: }
   362                           ;main.c: 100: RB0 = 0;
   363  0071  1006               	bcf	6,0	;volatile
   364  0072                     l763:	
   365                           
   366                           ;main.c: 101: }
   367                           ;main.c: 103: if (i == 26) {
   368  0072  301A               	movlw	26
   369  0073  063A               	xorwf	_i,w
   370  0074  043B               	iorwf	_i+1,w
   371  0075  1D03               	skipz
   372  0076  283A               	goto	l737
   373                           
   374                           ;main.c: 104: i = 0;
   375  0077  01BA               	clrf	_i
   376  0078  01BB               	clrf	_i+1
   377                           
   378                           ;main.c: 106: for (int x = 0; x < 26; x++) {
   379  0079  01C2               	clrf	main@x
   380  007A  01C3               	clrf	main@x+1
   381  007B  0843               	movf	main@x+1,w
   382  007C  3A80               	xorlw	128
   383  007D  00FF               	movwf	127
   384  007E  3080               	movlw	128
   385  007F  027F               	subwf	127,w
   386  0080  1D03               	skipz
   387  0081  2884               	goto	u495
   388  0082  301A               	movlw	26
   389  0083  0242               	subwf	main@x,w
   390  0084                     u495:	
   391  0084  1803               	btfsc	3,0
   392  0085  28BB               	goto	l783
   393  0086                     l771:	
   394                           
   395                           ;main.c: 107: if (data[x] == 1) {
   396  0086  1283               	bcf	3,5	;RP0=0, select bank0
   397  0087  1303               	bcf	3,6	;RP1=0, select bank0
   398  0088  0842               	movf	main@x,w
   399  0089  3E20               	addlw	_data& (0+255)
   400  008A  0084               	movwf	4
   401  008B  1383               	bcf	3,7	;select IRP bank0
   402  008C  0800               	movf	0,w
   403  008D  3A01               	xorlw	1
   404  008E  1D03               	skipz
   405  008F  2892               	goto	l775
   406                           
   407                           ;main.c: 108: TXREG = 49;
   408  0090  3031               	movlw	49
   409  0091  2899               	goto	L1
   410  0092                     l775:	
   411                           ;main.c: 109: } else if (data[x] == 0) {
   412                           
   413  0092  0842               	movf	main@x,w
   414  0093  3E20               	addlw	_data& (0+255)
   415  0094  0084               	movwf	4
   416  0095  0880               	movf	0,f
   417  0096  1D03               	skipz
   418  0097  289A               	goto	l779
   419                           
   420                           ;main.c: 110: TXREG = 48;
   421  0098  3030               	movlw	48
   422  0099                     L1:	
   423  0099  0099               	movwf	25	;volatile
   424  009A                     l779:	
   425                           
   426                           ;main.c: 111: }
   427                           ;main.c: 112: TXSTAbits.TXEN = 1;
   428  009A  1683               	bsf	3,5	;RP0=1, select bank1
   429  009B  1303               	bcf	3,6	;RP1=0, select bank1
   430  009C  1698               	bsf	24,5	;volatile
   431                           
   432                           ;main.c: 113: _delay((unsigned long)((10)*(20000000/4000.0)));
   433  009D  3041               	movlw	65
   434  009E  1283               	bcf	3,5	;RP0=0, select bank0
   435  009F  1303               	bcf	3,6	;RP1=0, select bank0
   436  00A0  00C1               	movwf	??_main+1
   437  00A1  30EE               	movlw	238
   438  00A2  00C0               	movwf	??_main
   439  00A3                     u537:	
   440  00A3  0BC0               	decfsz	??_main,f
   441  00A4  28A3               	goto	u537
   442  00A5  0BC1               	decfsz	??_main+1,f
   443  00A6  28A3               	goto	u537
   444  00A7  0000               	nop
   445  00A8  3001               	movlw	1
   446  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   447  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   448  00AB  07C2               	addwf	main@x,f
   449  00AC  1803               	skipnc
   450  00AD  0AC3               	incf	main@x+1,f
   451  00AE  3000               	movlw	0
   452  00AF  07C3               	addwf	main@x+1,f
   453  00B0  0843               	movf	main@x+1,w
   454  00B1  3A80               	xorlw	128
   455  00B2  00FF               	movwf	127
   456  00B3  3080               	movlw	128
   457  00B4  027F               	subwf	127,w
   458  00B5  1D03               	skipz
   459  00B6  28B9               	goto	u525
   460  00B7  301A               	movlw	26
   461  00B8  0242               	subwf	main@x,w
   462  00B9                     u525:	
   463  00B9  1C03               	skipc
   464  00BA  2886               	goto	l771
   465  00BB                     l783:	
   466                           
   467                           ;main.c: 114: }
   468                           ;main.c: 115: TXREG = 10;
   469  00BB  300A               	movlw	10
   470  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   471  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   472  00BE  0099               	movwf	25	;volatile
   473                           
   474                           ;main.c: 116: TXSTAbits.TXEN = 1;
   475  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   476  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   477  00C1  1698               	bsf	24,5	;volatile
   478                           
   479                           ;main.c: 117: _delay((unsigned long)((10)*(20000000/4000.0)));
   480  00C2  3041               	movlw	65
   481  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   482  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   483  00C5  00C1               	movwf	??_main+1
   484  00C6  30EE               	movlw	238
   485  00C7  00C0               	movwf	??_main
   486  00C8                     u547:	
   487  00C8  0BC0               	decfsz	??_main,f
   488  00C9  28C8               	goto	u547
   489  00CA  0BC1               	decfsz	??_main+1,f
   490  00CB  28C8               	goto	u547
   491  00CC  0000               	nop
   492                           
   493                           ;main.c: 118: TXREG = 13;
   494  00CD  300D               	movlw	13
   495  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   496  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   497  00D0  0099               	movwf	25	;volatile
   498                           
   499                           ;main.c: 119: TXSTAbits.TXEN = 1;
   500  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   501  00D2  1303               	bcf	3,6	;RP1=0, select bank1
   502  00D3  1698               	bsf	24,5	;volatile
   503                           
   504                           ;main.c: 120: _delay((unsigned long)((10)*(20000000/4000.0)));
   505  00D4  3041               	movlw	65
   506  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   507  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   508  00D7  00C1               	movwf	??_main+1
   509  00D8  30EE               	movlw	238
   510  00D9  00C0               	movwf	??_main
   511  00DA                     u557:	
   512  00DA  0BC0               	decfsz	??_main,f
   513  00DB  28DA               	goto	u557
   514  00DC  0BC1               	decfsz	??_main+1,f
   515  00DD  28DA               	goto	u557
   516  00DE  0000               	nop
   517  00DF  283A               	goto	l737
   518  00E0                     __end_of_main:	
   519                           ;main.c: 121: }
   520                           ;main.c: 122: }
   521                           ;main.c: 123: return 0;
   522                           ;	Return value of _main is never used
   523                           
   524                           
   525                           	psect	text1
   526  0120                     __ptext1:	
   527 ;; *************** function _portBConfiguration *****************
   528 ;; Defined at:
   529 ;;		line 69 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;		None               void
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _portBConfiguration
   559  0120                     _portBConfiguration:	
   560                           
   561                           ;main.c: 70: TRISB = 0X30;
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _portBConfiguration: [wreg]
   565  0120  3030               	movlw	48
   566  0121  1683               	bsf	3,5	;RP0=1, select bank1
   567  0122  1303               	bcf	3,6	;RP1=0, select bank1
   568  0123  0086               	movwf	6	;volatile
   569                           
   570                           ;main.c: 71: nRBPU = 0;
   571  0124  1381               	bcf	1,7	;volatile
   572  0125  0008               	return
   573  0126                     __end_of_portBConfiguration:	
   574                           
   575                           	psect	text2
   576  0104                     __ptext2:	
   577 ;; *************** function _UART_Initialization *****************
   578 ;; Defined at:
   579 ;;		line 58 in file "main.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;		None               void
   586 ;; Registers used:
   587 ;;		wreg
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _UART_Initialization
   609  0104                     _UART_Initialization:	
   610                           
   611                           ;main.c: 59: BRGH = 1;
   612                           
   613                           ;incstack = 0
   614                           ; Regs used in _UART_Initialization: [wreg]
   615  0104  1683               	bsf	3,5	;RP0=1, select bank1
   616  0105  1303               	bcf	3,6	;RP1=0, select bank1
   617  0106  1518               	bsf	24,2	;volatile
   618                           
   619                           ;main.c: 60: SPBRG = 64;
   620  0107  3040               	movlw	64
   621  0108  0099               	movwf	25	;volatile
   622                           
   623                           ;main.c: 61: SYNC = 0;
   624  0109  1218               	bcf	24,4	;volatile
   625                           
   626                           ;main.c: 62: SPEN = 1;
   627  010A  1283               	bcf	3,5	;RP0=0, select bank0
   628  010B  1303               	bcf	3,6	;RP1=0, select bank0
   629  010C  1798               	bsf	24,7	;volatile
   630                           
   631                           ;main.c: 63: TRISC7 = 1;
   632  010D  1683               	bsf	3,5	;RP0=1, select bank1
   633  010E  1303               	bcf	3,6	;RP1=0, select bank1
   634  010F  1787               	bsf	7,7	;volatile
   635                           
   636                           ;main.c: 64: TRISC6 = 1;
   637  0110  1707               	bsf	7,6	;volatile
   638                           
   639                           ;main.c: 65: CREN = 1;
   640  0111  1283               	bcf	3,5	;RP0=0, select bank0
   641  0112  1303               	bcf	3,6	;RP1=0, select bank0
   642  0113  1618               	bsf	24,4	;volatile
   643                           
   644                           ;main.c: 66: TXEN = 1;
   645  0114  1683               	bsf	3,5	;RP0=1, select bank1
   646  0115  1303               	bcf	3,6	;RP1=0, select bank1
   647  0116  1698               	bsf	24,5	;volatile
   648  0117  0008               	return
   649  0118                     __end_of_UART_Initialization:	
   650                           
   651                           	psect	text3
   652  00E0                     __ptext3:	
   653 ;; *************** function _catchInterrupts *****************
   654 ;; Defined at:
   655 ;;		line 35 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;		None               void
   662 ;; Registers used:
   663 ;;		wreg
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          6       0       0       0       0
   672 ;;      Totals:         6       0       0       0       0
   673 ;;Total ram usage:        6 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		Interrupt level 1
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _catchInterrupts
   684  00E0                     _catchInterrupts:	
   685                           
   686                           ;main.c: 37: if (PIR1bits.RCIF == 1) {
   687  00E0  1E8C               	btfss	12,5	;volatile
   688  00E1  28F7               	goto	i1l60
   689                           
   690                           ;main.c: 38: serialData = RCREG;
   691  00E2  081A               	movf	26,w	;volatile
   692  00E3  00F0               	movwf	??_catchInterrupts
   693  00E4  0870               	movf	??_catchInterrupts,w
   694  00E5  00F9               	movwf	_serialData
   695                           
   696                           ;main.c: 39: TXREG = serialData;
   697  00E6  0879               	movf	_serialData,w
   698  00E7  0099               	movwf	25	;volatile
   699                           
   700                           ;main.c: 40: TXSTAbits.TXEN = 1;
   701  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   702  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   703  00EA  1698               	bsf	24,5	;volatile
   704                           
   705                           ;main.c: 45: RB1 = 1;
   706  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   707  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   708  00ED  1486               	bsf	6,1	;volatile
   709                           
   710                           ;main.c: 46: _delay((unsigned long)((10)*(20000000/4000.0)));
   711  00EE  3041               	movlw	65
   712  00EF  00F1               	movwf	??_catchInterrupts+1
   713  00F0  30EE               	movlw	238
   714  00F1  00F0               	movwf	??_catchInterrupts
   715  00F2                     u56_27:	
   716  00F2  0BF0               	decfsz	??_catchInterrupts,f
   717  00F3  28F2               	goto	u56_27
   718  00F4  0BF1               	decfsz	??_catchInterrupts+1,f
   719  00F5  28F2               	goto	u56_27
   720  00F6  0000               	nop
   721  00F7                     i1l60:	
   722  00F7  0875               	movf	??_catchInterrupts+5,w
   723  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   724  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   725  00FA  00FF               	movwf	127
   726  00FB  0874               	movf	??_catchInterrupts+4,w
   727  00FC  008A               	movwf	10
   728  00FD  0873               	movf	??_catchInterrupts+3,w
   729  00FE  0084               	movwf	4
   730  00FF  0E72               	swapf	(??_catchInterrupts+2)^(0+-128),w
   731  0100  0083               	movwf	3
   732  0101  0EFE               	swapf	126,f
   733  0102  0E7E               	swapf	126,w
   734  0103  0009               	retfie
   735  0104                     __end_of_catchInterrupts:	
   736  007E                     btemp	set	126	;btemp
   737  007E                     wtemp	set	126
   738  007E                     wtemp0	set	126
   739  0080                     wtemp1	set	128
   740  0082                     wtemp2	set	130
   741  0084                     wtemp3	set	132
   742  0086                     wtemp4	set	134
   743  0088                     wtemp5	set	136
   744  007F                     wtemp6	set	127
   745  007E                     ttemp	set	126
   746  007E                     ttemp0	set	126
   747  0081                     ttemp1	set	129
   748  0084                     ttemp2	set	132
   749  0087                     ttemp3	set	135
   750  007F                     ttemp4	set	127
   751  007E                     ltemp	set	126
   752  007E                     ltemp0	set	126
   753  0082                     ltemp1	set	130
   754  0086                     ltemp2	set	134
   755  0080                     ltemp3	set	128
   756                           
   757                           	psect	intentry
   758  0004                     __pintentry:	
   759                           ;incstack = 0
   760                           ; Regs used in _catchInterrupts: [wreg]
   761                           
   762  0004                     interrupt_function:	
   763  007E                     saved_w	set	btemp
   764  0004  00FE               	movwf	btemp
   765  0005  0E03               	swapf	3,w
   766  0006  00F2               	movwf	??_catchInterrupts+2
   767  0007  0804               	movf	4,w
   768  0008  00F3               	movwf	??_catchInterrupts+3
   769  0009  080A               	movf	10,w
   770  000A  00F4               	movwf	??_catchInterrupts+4
   771  000B  1283               	bcf	3,5	;RP0=0, select bank0
   772  000C  1303               	bcf	3,6	;RP1=0, select bank0
   773  000D  087F               	movf	btemp+1,w
   774  000E  00F5               	movwf	??_catchInterrupts+5
   775  000F  120A  118A  28E0   	ljmp	_catchInterrupts


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      8      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _catchInterrupts in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _catchInterrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _catchInterrupts in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _catchInterrupts in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _catchInterrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     130
                                              0 BANK0      8     4      4
                _UART_Initialization
                 _portBConfiguration
 ---------------------------------------------------------------------------------
 (1) _portBConfiguration                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialization                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _catchInterrupts                                      6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialization
   _portBConfiguration

 _catchInterrupts (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jan  8 00:12:30 2015

                           _i 003A                   __CFG_CP$OFF 0000                            l80 004F  
                          l76 006A                            l77 0046                            l86 0060  
                          l78 0055                            l87 005F                            l79 0050  
                          fsr 0004   __size_of_portBConfiguration 0006                           l743 0041  
                         l761 0064                           l737 003A                           l771 0086  
                         l763 0072                           l775 0092                           l783 00BB  
                         l779 009A                           _GIE 005F                           _RB0 0030  
                         _RB1 0031                           _RB4 0034                           _RB5 0035  
                __CFG_CPD$OFF 0000                           u525 00B9                           u537 00A3  
                         u547 00C8                           u557 00DA                           u495 0084  
                         fsr0 0004                           indf 0000                  __CFG_FOSC$HS 0000  
                __CFG_LVP$OFF 0000                  __CFG_WDTE$ON 0000                          _BRGH 04C2  
                        _CREN 00C4                          i1l60 00F7                          _SPEN 00C7  
                        _TXEN 04C5                          _SYNC 04C4       __end_of_catchInterrupts 0104  
                __CFG_WRT$OFF 0000                          _data 0020                          _main 0030  
                        btemp 007E                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 0012                          ttemp 007E                          wtemp 007E  
                       ?_main 003C                         _RCREG 001A                         _SPBRG 0099  
                       u56_27 00F2                         _TRISB 0086                         _TXREG 0019  
                       _nRBPU 040F                         main@x 0042                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __initialization 0015  
                __end_of_main 00E0                        ??_main 0040              ?_catchInterrupts 0070  
                      _TRISC6 043E                        _TRISC7 043F                __CFG_PWRTE$OFF 0000  
                      _dataIn 0078           _UART_Initialization 0104                  __pdataCOMMON 007A  
                      saved_w 007E          ?_UART_Initialization 0070       __end_of__initialization 002C  
              __pcstackCOMMON 0070                    __pbssBANK0 0020         ??_UART_Initialization 003C  
                  __pmaintext 0030    __end_of_portBConfiguration 0126                    __pintentry 0004  
                     __ptext1 0120                       __ptext2 0104                       __ptext3 00E0  
                     _sendFlg 0076                       clrloop0 0119          end_of_initialization 002C  
                  _serialData 0079                     _TXSTAbits 0098      __size_of_catchInterrupts 0024  
               __pidataCOMMON 0126           start_initialization 0015                   _DATA_LENGTH 007A  
                 __pbssCOMMON 0076                     ___latbits 0002   __end_of_UART_Initialization 0118  
               __pcstackBANK0 003C            _portBConfiguration 0120           ?_portBConfiguration 0070  
        ??_portBConfiguration 003C             ??_catchInterrupts 0070             interrupt_function 0004  
                   clear_ram0 0118                      _PIE1bits 008C                      _PIR1bits 000C  
               __size_of_main 00B0                      main@argc 003C                      main@argv 003E  
                  _INTCONbits 000B                      intlevel1 0000               _catchInterrupts 00E0  
__size_of_UART_Initialization 0014  
