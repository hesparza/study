

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 25 23:54:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0006                     _PORTB	set	6
    74  001A                     _RCREG	set	26
    75  0019                     _TXREG	set	25
    76  00C4                     _CREN	set	196
    77  0065                     _RCIF	set	101
    78  00C7                     _SPEN	set	199
    79  0099                     _SPBRG	set	153
    80  0086                     _TRISB	set	134
    81  04C2                     _BRGH	set	1218
    82  04C4                     _SYNC	set	1220
    83  043E                     _TRISC6	set	1086
    84  043F                     _TRISC7	set	1087
    85  04C1                     _TRMT	set	1217
    86  04C5                     _TXEN	set	1221
    87  040F                     _nRBPU	set	1039
    88                           
    89                           	psect	text0
    90  0000                     __ptext0:	
    91                           ; #config settings
    92                           
    93                           
    94                           ;psect for function ___aldiv
    95  0000                     
    96                           	psect	cinit
    97  07FC                     start_initialization:	
    98  07FC                     __initialization:	
    99  07FC                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  07FC                     __end_of__initialization:	
   103  07FC  0183               	clrf	3
   104  07FD  120A  118A  2E57   	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMMON
   107  0070                     __pcstackCOMMON:	
   108  0070                     ?_UART_Write:	
   109  0070                     ??_UART_Write:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_main:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?___aldiv:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     UART_Write@data:	
   119                           ; 4 bytes @ 0x0
   120                           
   121  0070                     ___aldiv@divisor:	
   122                           ; 1 bytes @ 0x0
   123                           
   124                           
   125                           ; 4 bytes @ 0x0
   126  0070                     	ds	4
   127  0074                     ___aldiv@dividend:	
   128                           
   129                           ; 4 bytes @ 0x4
   130  0074                     	ds	4
   131  0078                     ??___aldiv:	
   132                           
   133                           ; 0 bytes @ 0x8
   134  0078                     	ds	1
   135  0079                     UART_Init@x:	
   136                           
   137                           ; 2 bytes @ 0x9
   138  0079                     	ds	2
   139  007B                     ??_main:	
   140                           
   141                           ; 0 bytes @ 0xB
   142  007B                     	ds	3
   143                           
   144                           	psect	cstackBANK0
   145  0020                     __pcstackBANK0:	
   146  0020                     ___aldiv@counter:	
   147                           
   148                           ; 1 bytes @ 0x0
   149  0020                     	ds	1
   150  0021                     ___aldiv@sign:	
   151                           
   152                           ; 1 bytes @ 0x1
   153  0021                     	ds	1
   154  0022                     ___aldiv@quotient:	
   155                           
   156                           ; 4 bytes @ 0x2
   157  0022                     	ds	4
   158  0026                     ?_UART_Init:	
   159  0026                     UART_Init@baudrate:	
   160                           ; 1 bytes @ 0x6
   161                           
   162                           
   163                           ; 4 bytes @ 0x6
   164  0026                     	ds	4
   165  002A                     ??_UART_Init:	
   166                           
   167                           ; 0 bytes @ 0xA
   168  002A                     	ds	12
   169                           
   170                           	psect	maintext
   171  0657                     __pmaintext:	
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 17 in file "master.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;		None               void
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, pclath, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 17F/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   191 ;;      Params:         0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0
   193 ;;      Temps:          3       0       0       0       0
   194 ;;      Totals:         3       0       0       0       0
   195 ;;Total ram usage:        3 bytes
   196 ;; Hardware stack levels required when called:    2
   197 ;; This function calls:
   198 ;;		_UART_Init
   199 ;;		_UART_Write
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           
   206                           ;psect for function _main
   207  0657                     _main:	
   208                           
   209                           ;master.c: 19: TRISB = 0xFF;
   210                           
   211                           ;incstack = 0
   212                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   213  0657  30FF               	movlw	255
   214  0658  1683               	bsf	3,5	;RP0=1, select bank1
   215  0659  1303               	bcf	3,6	;RP1=0, select bank1
   216  065A  0086               	movwf	6	;volatile
   217                           
   218                           ;master.c: 20: nRBPU = 0;
   219  065B  1381               	bcf	1,7	;volatile
   220                           
   221                           ;master.c: 21: UART_Init(9600);
   222  065C  3000               	movlw	0
   223  065D  1283               	bcf	3,5	;RP0=0, select bank0
   224  065E  1303               	bcf	3,6	;RP1=0, select bank0
   225  065F  00A9               	movwf	UART_Init@baudrate+3
   226  0660  3000               	movlw	0
   227  0661  00A8               	movwf	UART_Init@baudrate+2
   228  0662  3025               	movlw	37
   229  0663  00A7               	movwf	UART_Init@baudrate+1
   230  0664  3080               	movlw	128
   231  0665  00A6               	movwf	UART_Init@baudrate
   232  0666  120A  118A  2710  120A  118A  	fcall	_UART_Init
   233  066B                     l705:	
   234                           ;master.c: 23: do
   235                           
   236                           
   237                           ;master.c: 24: {
   238                           ;master.c: 25: UART_Write(PORTB);
   239  066B  1283               	bcf	3,5	;RP0=0, select bank0
   240  066C  1303               	bcf	3,6	;RP1=0, select bank0
   241  066D  0806               	movf	6,w	;volatile
   242  066E  120A  118A  264D  120A  118A  	fcall	_UART_Write
   243                           
   244                           ;master.c: 26: _delay((unsigned long)((100)*(8000000/4000.0)));
   245  0673  3002               	movlw	2
   246  0674  00FD               	movwf	??_main+2
   247  0675  3004               	movlw	4
   248  0676  00FC               	movwf	??_main+1
   249  0677  30BA               	movlw	186
   250  0678  00FB               	movwf	??_main
   251  0679                     u417:	
   252  0679  0BFB               	decfsz	??_main,f
   253  067A  2E79               	goto	u417
   254  067B  0BFC               	decfsz	??_main+1,f
   255  067C  2E79               	goto	u417
   256  067D  0BFD               	decfsz	??_main+2,f
   257  067E  2E79               	goto	u417
   258  067F  0000               	nop
   259                           
   260                           ;master.c: 27: }while(1);
   261  0680  2E6B               	goto	l705
   262  0681                     __end_of_main:	
   263                           
   264                           	psect	text1
   265  064D                     __ptext1:	
   266 ;; *************** function _UART_Write *****************
   267 ;; Defined at:
   268 ;;		line 47 in file "uart.h"
   269 ;; Parameters:    Size  Location     Type
   270 ;;  data            1    wreg     unsigned char 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  data            1    0[COMMON] unsigned char 
   273 ;; Return value:  Size  Location     Type
   274 ;;		None               void
   275 ;; Registers used:
   276 ;;		wreg
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         1       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0
   285 ;;      Totals:         1       0       0       0       0
   286 ;;Total ram usage:        1 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;;		_UART_Write_Text
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           
   297                           ;psect for function _UART_Write
   298  064D                     _UART_Write:	
   299                           
   300                           ;incstack = 0
   301                           ; Regs used in _UART_Write: [wreg]
   302                           ;UART_Write@data stored from wreg
   303  064D  00F0               	movwf	UART_Write@data
   304  064E                     l58:	
   305                           ;uart.h: 49: while(!TRMT);
   306                           
   307  064E  1683               	bsf	3,5	;RP0=1, select bank1
   308  064F  1303               	bcf	3,6	;RP1=0, select bank1
   309  0650  1C98               	btfss	24,1	;volatile
   310  0651  2E4E               	goto	l58
   311                           
   312                           ;uart.h: 50: TXREG = data;
   313  0652  0870               	movf	UART_Write@data,w
   314  0653  1283               	bcf	3,5	;RP0=0, select bank0
   315  0654  1303               	bcf	3,6	;RP1=0, select bank0
   316  0655  0099               	movwf	25	;volatile
   317  0656  0008               	return
   318  0657                     __end_of_UART_Write:	
   319                           
   320                           	psect	text2
   321  0710                     __ptext2:	
   322 ;; *************** function _UART_Init *****************
   323 ;; Defined at:
   324 ;;		line 1 in file "uart.h"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  baudrate        4    6[BANK0 ] const long 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  x               2    9[COMMON] unsigned int 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      unsigned char 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       4       0       0       0
   339 ;;      Locals:         2       0       0       0       0
   340 ;;      Temps:          0      12       0       0       0
   341 ;;      Totals:         2      16       0       0       0
   342 ;;Total ram usage:       18 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; Hardware stack levels required when called:    1
   345 ;; This function calls:
   346 ;;		___aldiv
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _UART_Init
   354  0710                     _UART_Init:	
   355                           
   356                           ;uart.h: 3: unsigned int x;
   357                           ;uart.h: 4: x = (8000000 - baudrate*64)/(baudrate*64);
   358                           
   359                           ;incstack = 0
   360                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   361  0710  1283               	bcf	3,5	;RP0=0, select bank0
   362  0711  1303               	bcf	3,6	;RP1=0, select bank0
   363  0712  0826               	movf	UART_Init@baudrate,w
   364  0713  00AA               	movwf	??_UART_Init
   365  0714  0827               	movf	UART_Init@baudrate+1,w
   366  0715  00AB               	movwf	??_UART_Init+1
   367  0716  0828               	movf	UART_Init@baudrate+2,w
   368  0717  00AC               	movwf	??_UART_Init+2
   369  0718  0829               	movf	UART_Init@baudrate+3,w
   370  0719  00AD               	movwf	??_UART_Init+3
   371  071A  3006               	movlw	6
   372  071B                     u335:	
   373  071B  1003               	clrc
   374  071C  0DAA               	rlf	??_UART_Init,f
   375  071D  0DAB               	rlf	??_UART_Init+1,f
   376  071E  0DAC               	rlf	??_UART_Init+2,f
   377  071F  0DAD               	rlf	??_UART_Init+3,f
   378  0720  3EFF               	addlw	-1
   379  0721  1D03               	skipz
   380  0722  2F1B               	goto	u335
   381  0723  082D               	movf	??_UART_Init+3,w
   382  0724  00F3               	movwf	___aldiv@divisor+3
   383  0725  082C               	movf	??_UART_Init+2,w
   384  0726  00F2               	movwf	___aldiv@divisor+2
   385  0727  082B               	movf	??_UART_Init+1,w
   386  0728  00F1               	movwf	___aldiv@divisor+1
   387  0729  082A               	movf	??_UART_Init,w
   388  072A  00F0               	movwf	___aldiv@divisor
   389  072B  3000               	movlw	0
   390  072C  00AE               	movwf	??_UART_Init+4
   391  072D  3012               	movlw	18
   392  072E  00AF               	movwf	??_UART_Init+5
   393  072F  307A               	movlw	122
   394  0730  00B0               	movwf	??_UART_Init+6
   395  0731  3000               	movlw	0
   396  0732  00B1               	movwf	??_UART_Init+7
   397  0733  0826               	movf	UART_Init@baudrate,w
   398  0734  00B2               	movwf	??_UART_Init+8
   399  0735  0827               	movf	UART_Init@baudrate+1,w
   400  0736  00B3               	movwf	??_UART_Init+9
   401  0737  0828               	movf	UART_Init@baudrate+2,w
   402  0738  00B4               	movwf	??_UART_Init+10
   403  0739  0829               	movf	UART_Init@baudrate+3,w
   404  073A  00B5               	movwf	??_UART_Init+11
   405  073B  3006               	movlw	6
   406  073C                     u345:	
   407  073C  1003               	clrc
   408  073D  0DB2               	rlf	??_UART_Init+8,f
   409  073E  0DB3               	rlf	??_UART_Init+9,f
   410  073F  0DB4               	rlf	??_UART_Init+10,f
   411  0740  0DB5               	rlf	??_UART_Init+11,f
   412  0741  3EFF               	addlw	-1
   413  0742  1D03               	skipz
   414  0743  2F3C               	goto	u345
   415  0744  09B2               	comf	??_UART_Init+8,f
   416  0745  09B3               	comf	??_UART_Init+9,f
   417  0746  09B4               	comf	??_UART_Init+10,f
   418  0747  09B5               	comf	??_UART_Init+11,f
   419  0748  0AB2               	incf	??_UART_Init+8,f
   420  0749  1903               	skipnz
   421  074A  0AB3               	incf	??_UART_Init+9,f
   422  074B  1903               	skipnz
   423  074C  0AB4               	incf	??_UART_Init+10,f
   424  074D  1903               	skipnz
   425  074E  0AB5               	incf	??_UART_Init+11,f
   426  074F  0832               	movf	??_UART_Init+8,w
   427  0750  07AE               	addwf	??_UART_Init+4,f
   428  0751  0833               	movf	??_UART_Init+9,w
   429  0752  1803               	skipnc
   430  0753  0F33               	incfsz	??_UART_Init+9,w
   431  0754  2F56               	goto	u350
   432  0755  2F57               	goto	u351
   433  0756                     u350:	
   434  0756  07AF               	addwf	??_UART_Init+5,f
   435  0757                     u351:	
   436  0757  0834               	movf	??_UART_Init+10,w
   437  0758  1803               	skipnc
   438  0759  0F34               	incfsz	??_UART_Init+10,w
   439  075A  2F5C               	goto	u352
   440  075B  2F5D               	goto	u353
   441  075C                     u352:	
   442  075C  07B0               	addwf	??_UART_Init+6,f
   443  075D                     u353:	
   444  075D  0835               	movf	??_UART_Init+11,w
   445  075E  1803               	skipnc
   446  075F  0A35               	incf	??_UART_Init+11,w
   447  0760  07B1               	addwf	??_UART_Init+7,f
   448  0761  0831               	movf	??_UART_Init+7,w
   449  0762  00F7               	movwf	___aldiv@dividend+3
   450  0763  0830               	movf	??_UART_Init+6,w
   451  0764  00F6               	movwf	___aldiv@dividend+2
   452  0765  082F               	movf	??_UART_Init+5,w
   453  0766  00F5               	movwf	___aldiv@dividend+1
   454  0767  082E               	movf	??_UART_Init+4,w
   455  0768  00F4               	movwf	___aldiv@dividend
   456  0769  120A  118A  2681  120A  118A  	fcall	___aldiv
   457  076E  0871               	movf	?___aldiv+1,w
   458  076F  01FA               	clrf	UART_Init@x+1
   459  0770  07FA               	addwf	UART_Init@x+1,f
   460  0771  0870               	movf	?___aldiv,w
   461  0772  01F9               	clrf	UART_Init@x
   462  0773  07F9               	addwf	UART_Init@x,f
   463                           
   464                           ;uart.h: 5: if(x>255)
   465  0774  3001               	movlw	1
   466  0775  027A               	subwf	UART_Init@x+1,w
   467  0776  3000               	movlw	0
   468  0777  1903               	skipnz
   469  0778  0279               	subwf	UART_Init@x,w
   470  0779  1C03               	skipc
   471  077A  2FE2               	goto	l681
   472                           
   473                           ;uart.h: 6: {
   474                           ;uart.h: 7: x = (8000000 - baudrate*16)/(baudrate*16);
   475  077B  1283               	bcf	3,5	;RP0=0, select bank0
   476  077C  1303               	bcf	3,6	;RP1=0, select bank0
   477  077D  0826               	movf	UART_Init@baudrate,w
   478  077E  00AA               	movwf	??_UART_Init
   479  077F  0827               	movf	UART_Init@baudrate+1,w
   480  0780  00AB               	movwf	??_UART_Init+1
   481  0781  0828               	movf	UART_Init@baudrate+2,w
   482  0782  00AC               	movwf	??_UART_Init+2
   483  0783  0829               	movf	UART_Init@baudrate+3,w
   484  0784  00AD               	movwf	??_UART_Init+3
   485  0785  3004               	movlw	4
   486  0786                     u375:	
   487  0786  1003               	clrc
   488  0787  0DAA               	rlf	??_UART_Init,f
   489  0788  0DAB               	rlf	??_UART_Init+1,f
   490  0789  0DAC               	rlf	??_UART_Init+2,f
   491  078A  0DAD               	rlf	??_UART_Init+3,f
   492  078B  3EFF               	addlw	-1
   493  078C  1D03               	skipz
   494  078D  2F86               	goto	u375
   495  078E  082D               	movf	??_UART_Init+3,w
   496  078F  00F3               	movwf	___aldiv@divisor+3
   497  0790  082C               	movf	??_UART_Init+2,w
   498  0791  00F2               	movwf	___aldiv@divisor+2
   499  0792  082B               	movf	??_UART_Init+1,w
   500  0793  00F1               	movwf	___aldiv@divisor+1
   501  0794  082A               	movf	??_UART_Init,w
   502  0795  00F0               	movwf	___aldiv@divisor
   503  0796  3000               	movlw	0
   504  0797  00AE               	movwf	??_UART_Init+4
   505  0798  3012               	movlw	18
   506  0799  00AF               	movwf	??_UART_Init+5
   507  079A  307A               	movlw	122
   508  079B  00B0               	movwf	??_UART_Init+6
   509  079C  3000               	movlw	0
   510  079D  00B1               	movwf	??_UART_Init+7
   511  079E  0826               	movf	UART_Init@baudrate,w
   512  079F  00B2               	movwf	??_UART_Init+8
   513  07A0  0827               	movf	UART_Init@baudrate+1,w
   514  07A1  00B3               	movwf	??_UART_Init+9
   515  07A2  0828               	movf	UART_Init@baudrate+2,w
   516  07A3  00B4               	movwf	??_UART_Init+10
   517  07A4  0829               	movf	UART_Init@baudrate+3,w
   518  07A5  00B5               	movwf	??_UART_Init+11
   519  07A6  3004               	movlw	4
   520  07A7                     u385:	
   521  07A7  1003               	clrc
   522  07A8  0DB2               	rlf	??_UART_Init+8,f
   523  07A9  0DB3               	rlf	??_UART_Init+9,f
   524  07AA  0DB4               	rlf	??_UART_Init+10,f
   525  07AB  0DB5               	rlf	??_UART_Init+11,f
   526  07AC  3EFF               	addlw	-1
   527  07AD  1D03               	skipz
   528  07AE  2FA7               	goto	u385
   529  07AF  09B2               	comf	??_UART_Init+8,f
   530  07B0  09B3               	comf	??_UART_Init+9,f
   531  07B1  09B4               	comf	??_UART_Init+10,f
   532  07B2  09B5               	comf	??_UART_Init+11,f
   533  07B3  0AB2               	incf	??_UART_Init+8,f
   534  07B4  1903               	skipnz
   535  07B5  0AB3               	incf	??_UART_Init+9,f
   536  07B6  1903               	skipnz
   537  07B7  0AB4               	incf	??_UART_Init+10,f
   538  07B8  1903               	skipnz
   539  07B9  0AB5               	incf	??_UART_Init+11,f
   540  07BA  0832               	movf	??_UART_Init+8,w
   541  07BB  07AE               	addwf	??_UART_Init+4,f
   542  07BC  0833               	movf	??_UART_Init+9,w
   543  07BD  1803               	skipnc
   544  07BE  0F33               	incfsz	??_UART_Init+9,w
   545  07BF  2FC1               	goto	u390
   546  07C0  2FC2               	goto	u391
   547  07C1                     u390:	
   548  07C1  07AF               	addwf	??_UART_Init+5,f
   549  07C2                     u391:	
   550  07C2  0834               	movf	??_UART_Init+10,w
   551  07C3  1803               	skipnc
   552  07C4  0F34               	incfsz	??_UART_Init+10,w
   553  07C5  2FC7               	goto	u392
   554  07C6  2FC8               	goto	u393
   555  07C7                     u392:	
   556  07C7  07B0               	addwf	??_UART_Init+6,f
   557  07C8                     u393:	
   558  07C8  0835               	movf	??_UART_Init+11,w
   559  07C9  1803               	skipnc
   560  07CA  0A35               	incf	??_UART_Init+11,w
   561  07CB  07B1               	addwf	??_UART_Init+7,f
   562  07CC  0831               	movf	??_UART_Init+7,w
   563  07CD  00F7               	movwf	___aldiv@dividend+3
   564  07CE  0830               	movf	??_UART_Init+6,w
   565  07CF  00F6               	movwf	___aldiv@dividend+2
   566  07D0  082F               	movf	??_UART_Init+5,w
   567  07D1  00F5               	movwf	___aldiv@dividend+1
   568  07D2  082E               	movf	??_UART_Init+4,w
   569  07D3  00F4               	movwf	___aldiv@dividend
   570  07D4  120A  118A  2681  120A  118A  	fcall	___aldiv
   571  07D9  0871               	movf	?___aldiv+1,w
   572  07DA  01FA               	clrf	UART_Init@x+1
   573  07DB  07FA               	addwf	UART_Init@x+1,f
   574  07DC  0870               	movf	?___aldiv,w
   575  07DD  01F9               	clrf	UART_Init@x
   576  07DE  07F9               	addwf	UART_Init@x,f
   577                           
   578                           ;uart.h: 8: BRGH = 1;
   579  07DF  1683               	bsf	3,5	;RP0=1, select bank1
   580  07E0  1303               	bcf	3,6	;RP1=0, select bank1
   581  07E1  1518               	bsf	24,2	;volatile
   582  07E2                     l681:	
   583                           
   584                           ;uart.h: 9: }
   585                           ;uart.h: 10: if(x<256)
   586  07E2  3001               	movlw	1
   587  07E3  027A               	subwf	UART_Init@x+1,w
   588  07E4  3000               	movlw	0
   589  07E5  1903               	skipnz
   590  07E6  0279               	subwf	UART_Init@x,w
   591  07E7  1803               	skipnc
   592  07E8  0008               	return
   593                           
   594                           ;uart.h: 11: {
   595                           ;uart.h: 12: SPBRG = x;
   596  07E9  0879               	movf	UART_Init@x,w
   597  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   598  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   599  07EC  0099               	movwf	25	;volatile
   600                           
   601                           ;uart.h: 13: SYNC = 0;
   602  07ED  1218               	bcf	24,4	;volatile
   603                           
   604                           ;uart.h: 14: SPEN = 1;
   605  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   606  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   607  07F0  1798               	bsf	24,7	;volatile
   608                           
   609                           ;uart.h: 15: TRISC7 = 1;
   610  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   611  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   612  07F3  1787               	bsf	7,7	;volatile
   613                           
   614                           ;uart.h: 16: TRISC6 = 1;
   615  07F4  1707               	bsf	7,6	;volatile
   616                           
   617                           ;uart.h: 17: CREN = 1;
   618  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   619  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   620  07F7  1618               	bsf	24,4	;volatile
   621                           
   622                           ;uart.h: 18: TXEN = 1;
   623  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   624  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   625  07FA  1698               	bsf	24,5	;volatile
   626                           
   627                           ;uart.h: 19: return 1;
   628                           ;	Return value of _UART_Init is never used
   629  07FB  0008               	return
   630  07FC                     __end_of_UART_Init:	
   631                           ;uart.h: 20: }
   632                           ;uart.h: 21: return 0;
   633                           ;	Return value of _UART_Init is never used
   634                           
   635                           
   636                           	psect	text3
   637  0681                     __ptext3:	
   638 ;; *************** function ___aldiv *****************
   639 ;; Defined at:
   640 ;;		line 6 in file "/Applications/microchip/xc8/v1.33/sources/common/aldiv.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  divisor         4    0[COMMON] long 
   643 ;;  dividend        4    4[COMMON] long 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  quotient        4    2[BANK0 ] long 
   646 ;;  sign            1    1[BANK0 ] unsigned char 
   647 ;;  counter         1    0[BANK0 ] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  4    0[COMMON] long 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         8       0       0       0       0
   658 ;;      Locals:         0       6       0       0       0
   659 ;;      Temps:          1       0       0       0       0
   660 ;;      Totals:         9       6       0       0       0
   661 ;;Total ram usage:       15 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_UART_Init
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function ___aldiv
   672  0681                     ___aldiv:	
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   676  0681  1283               	bcf	3,5	;RP0=0, select bank0
   677  0682  1303               	bcf	3,6	;RP1=0, select bank0
   678  0683  01A1               	clrf	___aldiv@sign
   679  0684  1FF3               	btfss	___aldiv@divisor+3,7
   680  0685  2E93               	goto	l211
   681  0686  09F0               	comf	___aldiv@divisor,f
   682  0687  09F1               	comf	___aldiv@divisor+1,f
   683  0688  09F2               	comf	___aldiv@divisor+2,f
   684  0689  09F3               	comf	___aldiv@divisor+3,f
   685  068A  0AF0               	incf	___aldiv@divisor,f
   686  068B  1903               	skipnz
   687  068C  0AF1               	incf	___aldiv@divisor+1,f
   688  068D  1903               	skipnz
   689  068E  0AF2               	incf	___aldiv@divisor+2,f
   690  068F  1903               	skipnz
   691  0690  0AF3               	incf	___aldiv@divisor+3,f
   692  0691  01A1               	clrf	___aldiv@sign
   693  0692  0AA1               	incf	___aldiv@sign,f
   694  0693                     l211:	
   695  0693  1FF7               	btfss	___aldiv@dividend+3,7
   696  0694  2EA4               	goto	l643
   697  0695  09F4               	comf	___aldiv@dividend,f
   698  0696  09F5               	comf	___aldiv@dividend+1,f
   699  0697  09F6               	comf	___aldiv@dividend+2,f
   700  0698  09F7               	comf	___aldiv@dividend+3,f
   701  0699  0AF4               	incf	___aldiv@dividend,f
   702  069A  1903               	skipnz
   703  069B  0AF5               	incf	___aldiv@dividend+1,f
   704  069C  1903               	skipnz
   705  069D  0AF6               	incf	___aldiv@dividend+2,f
   706  069E  1903               	skipnz
   707  069F  0AF7               	incf	___aldiv@dividend+3,f
   708  06A0  3001               	movlw	1
   709  06A1  00F8               	movwf	??___aldiv
   710  06A2  0878               	movf	??___aldiv,w
   711  06A3  06A1               	xorwf	___aldiv@sign,f
   712  06A4                     l643:	
   713  06A4  3000               	movlw	0
   714  06A5  00A5               	movwf	___aldiv@quotient+3
   715  06A6  3000               	movlw	0
   716  06A7  00A4               	movwf	___aldiv@quotient+2
   717  06A8  3000               	movlw	0
   718  06A9  00A3               	movwf	___aldiv@quotient+1
   719  06AA  3000               	movlw	0
   720  06AB  00A2               	movwf	___aldiv@quotient
   721  06AC  0873               	movf	___aldiv@divisor+3,w
   722  06AD  0472               	iorwf	___aldiv@divisor+2,w
   723  06AE  0471               	iorwf	___aldiv@divisor+1,w
   724  06AF  0470               	iorwf	___aldiv@divisor,w
   725  06B0  1903               	skipnz
   726  06B1  2EF9               	goto	l665
   727  06B2  01A0               	clrf	___aldiv@counter
   728  06B3  0AA0               	incf	___aldiv@counter,f
   729  06B4                     l651:	
   730  06B4  1BF3               	btfsc	___aldiv@divisor+3,7
   731  06B5  2EC4               	goto	l653
   732  06B6  3001               	movlw	1
   733  06B7  00F8               	movwf	??___aldiv
   734  06B8                     u265:	
   735  06B8  1003               	clrc
   736  06B9  0DF0               	rlf	___aldiv@divisor,f
   737  06BA  0DF1               	rlf	___aldiv@divisor+1,f
   738  06BB  0DF2               	rlf	___aldiv@divisor+2,f
   739  06BC  0DF3               	rlf	___aldiv@divisor+3,f
   740  06BD  0BF8               	decfsz	??___aldiv,f
   741  06BE  2EB8               	goto	u265
   742  06BF  3001               	movlw	1
   743  06C0  00F8               	movwf	??___aldiv
   744  06C1  0878               	movf	??___aldiv,w
   745  06C2  07A0               	addwf	___aldiv@counter,f
   746  06C3  2EB4               	goto	l651
   747  06C4                     l653:	
   748  06C4  3001               	movlw	1
   749  06C5  00F8               	movwf	??___aldiv
   750  06C6                     u285:	
   751  06C6  1003               	clrc
   752  06C7  0DA2               	rlf	___aldiv@quotient,f
   753  06C8  0DA3               	rlf	___aldiv@quotient+1,f
   754  06C9  0DA4               	rlf	___aldiv@quotient+2,f
   755  06CA  0DA5               	rlf	___aldiv@quotient+3,f
   756  06CB  0BF8               	decfsz	??___aldiv,f
   757  06CC  2EC6               	goto	u285
   758  06CD  0873               	movf	___aldiv@divisor+3,w
   759  06CE  0277               	subwf	___aldiv@dividend+3,w
   760  06CF  1D03               	skipz
   761  06D0  2EDB               	goto	u295
   762  06D1  0872               	movf	___aldiv@divisor+2,w
   763  06D2  0276               	subwf	___aldiv@dividend+2,w
   764  06D3  1D03               	skipz
   765  06D4  2EDB               	goto	u295
   766  06D5  0871               	movf	___aldiv@divisor+1,w
   767  06D6  0275               	subwf	___aldiv@dividend+1,w
   768  06D7  1D03               	skipz
   769  06D8  2EDB               	goto	u295
   770  06D9  0870               	movf	___aldiv@divisor,w
   771  06DA  0274               	subwf	___aldiv@dividend,w
   772  06DB                     u295:	
   773  06DB  1C03               	skipc
   774  06DC  2EEC               	goto	l661
   775  06DD  0870               	movf	___aldiv@divisor,w
   776  06DE  02F4               	subwf	___aldiv@dividend,f
   777  06DF  0871               	movf	___aldiv@divisor+1,w
   778  06E0  1C03               	skipc
   779  06E1  0F71               	incfsz	___aldiv@divisor+1,w
   780  06E2  02F5               	subwf	___aldiv@dividend+1,f
   781  06E3  0872               	movf	___aldiv@divisor+2,w
   782  06E4  1C03               	skipc
   783  06E5  0F72               	incfsz	___aldiv@divisor+2,w
   784  06E6  02F6               	subwf	___aldiv@dividend+2,f
   785  06E7  0873               	movf	___aldiv@divisor+3,w
   786  06E8  1C03               	skipc
   787  06E9  0F73               	incfsz	___aldiv@divisor+3,w
   788  06EA  02F7               	subwf	___aldiv@dividend+3,f
   789  06EB  1422               	bsf	___aldiv@quotient,0
   790  06EC                     l661:	
   791  06EC  3001               	movlw	1
   792  06ED                     u305:	
   793  06ED  1003               	clrc
   794  06EE  0CF3               	rrf	___aldiv@divisor+3,f
   795  06EF  0CF2               	rrf	___aldiv@divisor+2,f
   796  06F0  0CF1               	rrf	___aldiv@divisor+1,f
   797  06F1  0CF0               	rrf	___aldiv@divisor,f
   798  06F2  3EFF               	addlw	-1
   799  06F3  1D03               	skipz
   800  06F4  2EED               	goto	u305
   801  06F5  3001               	movlw	1
   802  06F6  02A0               	subwf	___aldiv@counter,f
   803  06F7  1D03               	btfss	3,2
   804  06F8  2EC4               	goto	l653
   805  06F9                     l665:	
   806  06F9  0821               	movf	___aldiv@sign,w
   807  06FA  1903               	btfsc	3,2
   808  06FB  2F07               	goto	l669
   809  06FC  09A2               	comf	___aldiv@quotient,f
   810  06FD  09A3               	comf	___aldiv@quotient+1,f
   811  06FE  09A4               	comf	___aldiv@quotient+2,f
   812  06FF  09A5               	comf	___aldiv@quotient+3,f
   813  0700  0AA2               	incf	___aldiv@quotient,f
   814  0701  1903               	skipnz
   815  0702  0AA3               	incf	___aldiv@quotient+1,f
   816  0703  1903               	skipnz
   817  0704  0AA4               	incf	___aldiv@quotient+2,f
   818  0705  1903               	skipnz
   819  0706  0AA5               	incf	___aldiv@quotient+3,f
   820  0707                     l669:	
   821  0707  0825               	movf	___aldiv@quotient+3,w
   822  0708  00F3               	movwf	?___aldiv+3
   823  0709  0824               	movf	___aldiv@quotient+2,w
   824  070A  00F2               	movwf	?___aldiv+2
   825  070B  0823               	movf	___aldiv@quotient+1,w
   826  070C  00F1               	movwf	?___aldiv+1
   827  070D  0822               	movf	___aldiv@quotient,w
   828  070E  00F0               	movwf	?___aldiv
   829  070F  0008               	return
   830  0710                     __end_of___aldiv:	
   831  007E                     btemp	set	126	;btemp
   832  007E                     wtemp	set	126
   833  007E                     wtemp0	set	126
   834  0080                     wtemp1	set	128
   835  0082                     wtemp2	set	130
   836  0084                     wtemp3	set	132
   837  0086                     wtemp4	set	134
   838  0088                     wtemp5	set	136
   839  007F                     wtemp6	set	127
   840  007E                     ttemp	set	126
   841  007E                     ttemp0	set	126
   842  0081                     ttemp1	set	129
   843  0084                     ttemp2	set	132
   844  0087                     ttemp3	set	135
   845  007F                     ttemp4	set	127
   846  007E                     ltemp	set	126
   847  007E                     ltemp0	set	126
   848  0082                     ltemp1	set	130
   849  0086                     ltemp2	set	134
   850  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     736
                                             11 COMMON     3     3      0
                          _UART_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 25 23:54:05 2014

            __CFG_CP$OFF 0000                       l58 064E                      l211 0693  
                    l705 066B                      l651 06B4                      l643 06A4  
                    l661 06EC                      l653 06C4                      l665 06F9  
                    l681 07E2                      l669 0707                      u305 06ED  
                    u350 0756                      u351 0757                      u335 071B  
                    u352 075C                      u265 06B8                      u353 075D  
                    u345 073C                      u417 0679             __CFG_CPD$OFF 0000  
                    u285 06C6                      u390 07C1                      u295 06DB  
                    u391 07C2                      u375 0786                      u392 07C7  
                    u393 07C8                      u385 07A7             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _BRGH 04C2                     _CREN 00C4  
                   _RCIF 0065                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4             __CFG_WRT$OFF 0000  
                   _main 0657                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E          __end_of___aldiv 0710                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  _nRBPU 040F              ?_UART_Write 0070       __size_of_UART_Init 00EC  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FC  
           __end_of_main 0681                   ??_main 007B                   _TRISC6 043E  
                 _TRISC7 043F           __CFG_PWRTE$OFF 0000        __end_of_UART_Init 07FC  
    __size_of_UART_Write 000A                ??___aldiv 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0657             ??_UART_Write 0070  
                ___aldiv 0681       __end_of_UART_Write 0657                  __ptext0 0000  
                __ptext1 064D                  __ptext2 0710                  __ptext3 0681  
       ___aldiv@dividend 0074     end_of_initialization 07FC         ___aldiv@quotient 0022  
              _UART_Init 0710           UART_Write@data 0070               ?_UART_Init 0026  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0070              ??_UART_Init 002A               UART_Init@x 0079  
        ___aldiv@divisor 0070          ___aldiv@counter 0020        UART_Init@baudrate 0026  
       __size_of___aldiv 008F            __size_of_main 002A             ___aldiv@sign 0021  
             _UART_Write 064D  
