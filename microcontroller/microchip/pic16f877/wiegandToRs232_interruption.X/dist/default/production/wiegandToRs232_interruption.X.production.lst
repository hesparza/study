

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jan  8 00:24:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  0088                     	;# 
    58  0089                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  000B                     _INTCONbits	set	11
    77  000C                     _PIR1bits	set	12
    78  001A                     _RCREG	set	26
    79  0019                     _TXREG	set	25
    80  00C4                     _CREN	set	196
    81  005F                     _GIE	set	95
    82  0030                     _RB0	set	48
    83  0031                     _RB1	set	49
    84  0034                     _RB4	set	52
    85  0035                     _RB5	set	53
    86  00C7                     _SPEN	set	199
    87  008C                     _PIE1bits	set	140
    88  0099                     _SPBRG	set	153
    89  0086                     _TRISB	set	134
    90  0098                     _TXSTAbits	set	152
    91  04C2                     _BRGH	set	1218
    92  04C4                     _SYNC	set	1220
    93  043E                     _TRISC6	set	1086
    94  043F                     _TRISC7	set	1087
    95  04C5                     _TXEN	set	1221
    96  040F                     _nRBPU	set	1039
    97                           
    98                           	psect	text0
    99  0000                     __ptext0:	
   100                           ; #config settings
   101                           
   102                           
   103                           ;psect for function _catchInterrupts
   104  0000                     
   105                           	psect	cinit
   106  0015                     start_initialization:	
   107  0015                     __initialization:	
   108                           
   109                           ; Clear objects allocated to COMMON
   110  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  0016  1383               	bcf	3,7	;select IRP bank0
   114  0017  3020               	movlw	low __pbssBANK0
   115  0018  0084               	movwf	4
   116  0019  303C               	movlw	low (__pbssBANK0+28)
   117  001A  120A  118A  210B   	fcall	clear_ram0
   118  001D                     end_of_initialization:	
   119                           ;End of C runtime variable initialization code
   120                           
   121  001D                     __end_of__initialization:	
   122  001D  0183               	clrf	3
   123  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  0076                     __pbssCOMMON:	
   127  0076                     _serialData:	
   128  0076                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  0020                     __pbssBANK0:	
   132  0020                     _data:	
   133  0020                     	ds	26
   134  003A                     _i:	
   135  003A                     	ds	2
   136                           
   137                           	psect	clrtext
   138  010B                     clear_ram0:	
   139                           ;	Called with FSR containing the base address, and
   140                           ;	W with the last address+1
   141                           
   142  010B  0064               	clrwdt	;clear the watchdog before getting into this loop
   143  010C                     clrloop0:	
   144  010C  0180               	clrf	0	;clear RAM location pointed to by FSR
   145  010D  0A84               	incf	4,f	;increment pointer
   146  010E  0604               	xorwf	4,w	;XOR with final address
   147  010F  1903               	btfsc	3,2	;have we reached the end yet?
   148  0110  3400               	retlw	0	;all done for this memory range, return
   149  0111  0604               	xorwf	4,w	;XOR again to restore value
   150  0112  290C               	goto	clrloop0	;do the next byte
   151                           
   152                           	psect	cstackCOMMON
   153  0070                     __pcstackCOMMON:	
   154  0070                     ?_catchInterrupts:	
   155  0070                     ??_catchInterrupts:	
   156                           ; 0 bytes @ 0x0
   157                           
   158  0070                     ?_setupInterrupRoutines:	
   159                           ; 0 bytes @ 0x0
   160                           
   161  0070                     ?_UART_Initialization:	
   162                           ; 0 bytes @ 0x0
   163                           
   164  0070                     ?_portBConfiguration:	
   165                           ; 0 bytes @ 0x0
   166                           
   167                           
   168                           ; 0 bytes @ 0x0
   169  0070                     	ds	6
   170  0076                     ??_setupInterrupRoutines:	
   171  0076                     ??_UART_Initialization:	
   172                           ; 0 bytes @ 0x6
   173                           
   174  0076                     ??_portBConfiguration:	
   175                           ; 0 bytes @ 0x6
   176                           
   177                           
   178                           	psect	cstackBANK0
   179  003C                     __pcstackBANK0:	
   180                           ; 0 bytes @ 0x6
   181                           
   182  003C                     ?_main:	
   183  003C                     main@argc:	
   184                           ; 2 bytes @ 0x0
   185                           
   186                           
   187                           ; 2 bytes @ 0x0
   188  003C                     	ds	2
   189  003E                     main@argv:	
   190                           
   191                           ; 2 bytes @ 0x2
   192  003E                     	ds	2
   193  0040                     ??_main:	
   194                           
   195                           ; 0 bytes @ 0x4
   196  0040                     	ds	2
   197  0042                     main@x:	
   198                           
   199                           ; 2 bytes @ 0x6
   200  0042                     	ds	2
   201                           
   202                           	psect	maintext
   203  0021                     __pmaintext:	
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 87 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;  argc            2    0[BANK0 ] int 
   212 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   213 ;; Auto vars:     Size  Location     Type
   214 ;;  x               2    6[BANK0 ] int 
   215 ;; Return value:  Size  Location     Type
   216 ;;                  2    0[BANK0 ] int 
   217 ;; Registers used:
   218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 17F/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       4       0       0       0
   225 ;;      Locals:         0       2       0       0       0
   226 ;;      Temps:          0       2       0       0       0
   227 ;;      Totals:         0       8       0       0       0
   228 ;;Total ram usage:        8 bytes
   229 ;; Hardware stack levels required when called:    2
   230 ;; This function calls:
   231 ;;		_UART_Initialization
   232 ;;		_portBConfiguration
   233 ;;		_setupInterrupRoutines
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           
   240                           ;psect for function _main
   241  0021                     _main:	
   242                           
   243                           ;main.c: 88: UART_Initialization();
   244                           
   245                           ;incstack = 0
   246                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   247  0021  120A  118A  20F7  120A  118A  	fcall	_UART_Initialization
   248                           
   249                           ;main.c: 89: setupInterrupRoutines();
   250  0026  120A  118A  2113  120A  118A  	fcall	_setupInterrupRoutines
   251                           
   252                           ;main.c: 90: portBConfiguration();
   253  002B  120A  118A  211A  120A  118A  	fcall	_portBConfiguration
   254  0030                     l736:	
   255                           ;main.c: 92: while(1) {
   256                           
   257                           
   258                           ;main.c: 93: RB0 = 0;
   259  0030  1283               	bcf	3,5	;RP0=0, select bank0
   260  0031  1303               	bcf	3,6	;RP1=0, select bank0
   261  0032  1006               	bcf	6,0	;volatile
   262                           
   263                           ;main.c: 94: if (i == 26) {
   264  0033  301A               	movlw	26
   265  0034  063A               	xorwf	_i,w
   266  0035  043B               	iorwf	_i+1,w
   267  0036  1D03               	skipz
   268  0037  2830               	goto	l736
   269                           
   270                           ;main.c: 95: for (int x = 0; x < 26; x++) {
   271  0038  01C2               	clrf	main@x
   272  0039  01C3               	clrf	main@x+1
   273  003A  0843               	movf	main@x+1,w
   274  003B  3A80               	xorlw	128
   275  003C  00FF               	movwf	127
   276  003D  3080               	movlw	128
   277  003E  027F               	subwf	127,w
   278  003F  1D03               	skipz
   279  0040  2843               	goto	u345
   280  0041  301A               	movlw	26
   281  0042  0242               	subwf	main@x,w
   282  0043                     u345:	
   283  0043  1803               	btfsc	3,0
   284  0044  287A               	goto	l758
   285  0045                     l746:	
   286                           
   287                           ;main.c: 96: if (data[x] == 1) {
   288  0045  1283               	bcf	3,5	;RP0=0, select bank0
   289  0046  1303               	bcf	3,6	;RP1=0, select bank0
   290  0047  0842               	movf	main@x,w
   291  0048  3E20               	addlw	_data& (0+255)
   292  0049  0084               	movwf	4
   293  004A  1383               	bcf	3,7	;select IRP bank0
   294  004B  0800               	movf	0,w
   295  004C  3A01               	xorlw	1
   296  004D  1D03               	skipz
   297  004E  2851               	goto	l750
   298                           
   299                           ;main.c: 97: TXREG = 49;
   300  004F  3031               	movlw	49
   301  0050  2858               	goto	L1
   302  0051                     l750:	
   303                           ;main.c: 98: } else if (data[x] == 0) {
   304                           
   305  0051  0842               	movf	main@x,w
   306  0052  3E20               	addlw	_data& (0+255)
   307  0053  0084               	movwf	4
   308  0054  0880               	movf	0,f
   309  0055  1D03               	skipz
   310  0056  2859               	goto	l754
   311                           
   312                           ;main.c: 99: TXREG = 48;
   313  0057  3030               	movlw	48
   314  0058                     L1:	
   315  0058  0099               	movwf	25	;volatile
   316  0059                     l754:	
   317                           
   318                           ;main.c: 100: }
   319                           ;main.c: 101: TXSTAbits.TXEN = 1;
   320  0059  1683               	bsf	3,5	;RP0=1, select bank1
   321  005A  1303               	bcf	3,6	;RP1=0, select bank1
   322  005B  1698               	bsf	24,5	;volatile
   323                           
   324                           ;main.c: 102: _delay((unsigned long)((10)*(20000000/4000.0)));
   325  005C  3041               	movlw	65
   326  005D  1283               	bcf	3,5	;RP0=0, select bank0
   327  005E  1303               	bcf	3,6	;RP1=0, select bank0
   328  005F  00C1               	movwf	??_main+1
   329  0060  30EE               	movlw	238
   330  0061  00C0               	movwf	??_main
   331  0062                     u387:	
   332  0062  0BC0               	decfsz	??_main,f
   333  0063  2862               	goto	u387
   334  0064  0BC1               	decfsz	??_main+1,f
   335  0065  2862               	goto	u387
   336  0066  0000               	nop
   337  0067  3001               	movlw	1
   338  0068  1283               	bcf	3,5	;RP0=0, select bank0
   339  0069  1303               	bcf	3,6	;RP1=0, select bank0
   340  006A  07C2               	addwf	main@x,f
   341  006B  1803               	skipnc
   342  006C  0AC3               	incf	main@x+1,f
   343  006D  3000               	movlw	0
   344  006E  07C3               	addwf	main@x+1,f
   345  006F  0843               	movf	main@x+1,w
   346  0070  3A80               	xorlw	128
   347  0071  00FF               	movwf	127
   348  0072  3080               	movlw	128
   349  0073  027F               	subwf	127,w
   350  0074  1D03               	skipz
   351  0075  2878               	goto	u375
   352  0076  301A               	movlw	26
   353  0077  0242               	subwf	main@x,w
   354  0078                     u375:	
   355  0078  1C03               	skipc
   356  0079  2845               	goto	l746
   357  007A                     l758:	
   358                           
   359                           ;main.c: 103: }
   360                           ;main.c: 104: TXREG = 10;
   361  007A  300A               	movlw	10
   362  007B  1283               	bcf	3,5	;RP0=0, select bank0
   363  007C  1303               	bcf	3,6	;RP1=0, select bank0
   364  007D  0099               	movwf	25	;volatile
   365                           
   366                           ;main.c: 105: TXSTAbits.TXEN = 1;
   367  007E  1683               	bsf	3,5	;RP0=1, select bank1
   368  007F  1303               	bcf	3,6	;RP1=0, select bank1
   369  0080  1698               	bsf	24,5	;volatile
   370                           
   371                           ;main.c: 106: _delay((unsigned long)((10)*(20000000/4000.0)));
   372  0081  3041               	movlw	65
   373  0082  1283               	bcf	3,5	;RP0=0, select bank0
   374  0083  1303               	bcf	3,6	;RP1=0, select bank0
   375  0084  00C1               	movwf	??_main+1
   376  0085  30EE               	movlw	238
   377  0086  00C0               	movwf	??_main
   378  0087                     u397:	
   379  0087  0BC0               	decfsz	??_main,f
   380  0088  2887               	goto	u397
   381  0089  0BC1               	decfsz	??_main+1,f
   382  008A  2887               	goto	u397
   383  008B  0000               	nop
   384                           
   385                           ;main.c: 107: TXREG = 13;
   386  008C  300D               	movlw	13
   387  008D  1283               	bcf	3,5	;RP0=0, select bank0
   388  008E  1303               	bcf	3,6	;RP1=0, select bank0
   389  008F  0099               	movwf	25	;volatile
   390                           
   391                           ;main.c: 108: TXSTAbits.TXEN = 1;
   392  0090  1683               	bsf	3,5	;RP0=1, select bank1
   393  0091  1303               	bcf	3,6	;RP1=0, select bank1
   394  0092  1698               	bsf	24,5	;volatile
   395                           
   396                           ;main.c: 109: _delay((unsigned long)((10)*(20000000/4000.0)));
   397  0093  3041               	movlw	65
   398  0094  1283               	bcf	3,5	;RP0=0, select bank0
   399  0095  1303               	bcf	3,6	;RP1=0, select bank0
   400  0096  00C1               	movwf	??_main+1
   401  0097  30EE               	movlw	238
   402  0098  00C0               	movwf	??_main
   403  0099                     u407:	
   404  0099  0BC0               	decfsz	??_main,f
   405  009A  2899               	goto	u407
   406  009B  0BC1               	decfsz	??_main+1,f
   407  009C  2899               	goto	u407
   408  009D  0000               	nop
   409                           
   410                           ;main.c: 111: i = 0;
   411  009E  1283               	bcf	3,5	;RP0=0, select bank0
   412  009F  1303               	bcf	3,6	;RP1=0, select bank0
   413  00A0  01BA               	clrf	_i
   414  00A1  01BB               	clrf	_i+1
   415  00A2  2830               	goto	l736
   416  00A3                     __end_of_main:	
   417                           ;main.c: 112: }
   418                           ;main.c: 113: }
   419                           ;main.c: 114: return 0;
   420                           ;	Return value of _main is never used
   421                           
   422                           
   423                           	psect	text1
   424  0113                     __ptext1:	
   425 ;; *************** function _setupInterrupRoutines *****************
   426 ;; Defined at:
   427 ;;		line 61 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;		None               void
   434 ;; Registers used:
   435 ;;		None
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _setupInterrupRoutines
   457  0113                     _setupInterrupRoutines:	
   458                           
   459                           ;main.c: 62: (GIE = 1);
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _setupInterrupRoutines: []
   463  0113  178B               	bsf	11,7	;volatile
   464                           
   465                           ;main.c: 63: INTCONbits.PEIE = 1;
   466  0114  170B               	bsf	11,6	;volatile
   467                           
   468                           ;main.c: 65: PIE1bits.RCIE = 1;
   469  0115  1683               	bsf	3,5	;RP0=1, select bank1
   470  0116  1303               	bcf	3,6	;RP1=0, select bank1
   471  0117  168C               	bsf	12,5	;volatile
   472                           
   473                           ;main.c: 66: INTCONbits.RBIE = 1;
   474  0118  158B               	bsf	11,3	;volatile
   475  0119  0008               	return
   476  011A                     __end_of_setupInterrupRoutines:	
   477                           
   478                           	psect	text2
   479  011A                     __ptext2:	
   480 ;; *************** function _portBConfiguration *****************
   481 ;; Defined at:
   482 ;;		line 80 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;		None               void
   489 ;; Registers used:
   490 ;;		wreg
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _portBConfiguration
   512  011A                     _portBConfiguration:	
   513                           
   514                           ;main.c: 81: TRISB = 0X30;
   515                           
   516                           ;incstack = 0
   517                           ; Regs used in _portBConfiguration: [wreg]
   518  011A  3030               	movlw	48
   519  011B  1683               	bsf	3,5	;RP0=1, select bank1
   520  011C  1303               	bcf	3,6	;RP1=0, select bank1
   521  011D  0086               	movwf	6	;volatile
   522                           
   523                           ;main.c: 82: nRBPU = 0;
   524  011E  1381               	bcf	1,7	;volatile
   525  011F  0008               	return
   526  0120                     __end_of_portBConfiguration:	
   527                           
   528                           	psect	text3
   529  00F7                     __ptext3:	
   530 ;; *************** function _UART_Initialization *****************
   531 ;; Defined at:
   532 ;;		line 69 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;		None               void
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _UART_Initialization
   562  00F7                     _UART_Initialization:	
   563                           
   564                           ;main.c: 70: BRGH = 1;
   565                           
   566                           ;incstack = 0
   567                           ; Regs used in _UART_Initialization: [wreg]
   568  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   569  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   570  00F9  1518               	bsf	24,2	;volatile
   571                           
   572                           ;main.c: 71: SPBRG = 64;
   573  00FA  3040               	movlw	64
   574  00FB  0099               	movwf	25	;volatile
   575                           
   576                           ;main.c: 72: SYNC = 0;
   577  00FC  1218               	bcf	24,4	;volatile
   578                           
   579                           ;main.c: 73: SPEN = 1;
   580  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   581  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   582  00FF  1798               	bsf	24,7	;volatile
   583                           
   584                           ;main.c: 74: TRISC7 = 1;
   585  0100  1683               	bsf	3,5	;RP0=1, select bank1
   586  0101  1303               	bcf	3,6	;RP1=0, select bank1
   587  0102  1787               	bsf	7,7	;volatile
   588                           
   589                           ;main.c: 75: TRISC6 = 1;
   590  0103  1707               	bsf	7,6	;volatile
   591                           
   592                           ;main.c: 76: CREN = 1;
   593  0104  1283               	bcf	3,5	;RP0=0, select bank0
   594  0105  1303               	bcf	3,6	;RP1=0, select bank0
   595  0106  1618               	bsf	24,4	;volatile
   596                           
   597                           ;main.c: 77: TXEN = 1;
   598  0107  1683               	bsf	3,5	;RP0=1, select bank1
   599  0108  1303               	bcf	3,6	;RP1=0, select bank1
   600  0109  1698               	bsf	24,5	;volatile
   601  010A  0008               	return
   602  010B                     __end_of_UART_Initialization:	
   603                           
   604                           	psect	text4
   605  00A3                     __ptext4:	
   606 ;; *************** function _catchInterrupts *****************
   607 ;; Defined at:
   608 ;;		line 32 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;		None               void
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          6       0       0       0       0
   625 ;;      Totals:         6       0       0       0       0
   626 ;;Total ram usage:        6 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		Interrupt level 1
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _catchInterrupts
   637  00A3                     _catchInterrupts:	
   638                           
   639                           ;main.c: 34: if (PIR1bits.RCIF == 1) {
   640  00A3  1E8C               	btfss	12,5	;volatile
   641  00A4  28BA               	goto	i1l668
   642                           
   643                           ;main.c: 35: serialData = RCREG;
   644  00A5  081A               	movf	26,w	;volatile
   645  00A6  00F0               	movwf	??_catchInterrupts
   646  00A7  0870               	movf	??_catchInterrupts,w
   647  00A8  00F6               	movwf	_serialData
   648                           
   649                           ;main.c: 36: TXREG = serialData;
   650  00A9  0876               	movf	_serialData,w
   651  00AA  0099               	movwf	25	;volatile
   652                           
   653                           ;main.c: 37: TXSTAbits.TXEN = 1;
   654  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   655  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   656  00AD  1698               	bsf	24,5	;volatile
   657                           
   658                           ;main.c: 38: RB1 = 1;
   659  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   660  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   661  00B0  1486               	bsf	6,1	;volatile
   662                           
   663                           ;main.c: 39: _delay((unsigned long)((10)*(20000000/4000.0)));
   664  00B1  3041               	movlw	65
   665  00B2  00F1               	movwf	??_catchInterrupts+1
   666  00B3  30EE               	movlw	238
   667  00B4  00F0               	movwf	??_catchInterrupts
   668  00B5                     u41_27:	
   669  00B5  0BF0               	decfsz	??_catchInterrupts,f
   670  00B6  28B5               	goto	u41_27
   671  00B7  0BF1               	decfsz	??_catchInterrupts+1,f
   672  00B8  28B5               	goto	u41_27
   673  00B9  0000               	nop
   674  00BA                     i1l668:	
   675                           
   676                           ;main.c: 40: }
   677                           ;main.c: 43: if (INTCONbits.RBIF == 1 && i < 26) {
   678  00BA  1C0B               	btfss	11,0	;volatile
   679  00BB  28EA               	goto	i1l68
   680  00BC  3000               	movlw	0
   681  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   682  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   683  00BF  023B               	subwf	_i+1,w
   684  00C0  301A               	movlw	26
   685  00C1  1903               	skipnz
   686  00C2  023A               	subwf	_i,w
   687  00C3  1803               	skipnc
   688  00C4  28EA               	goto	i1l68
   689                           
   690                           ;main.c: 44: if((RB4==0)&&(RB5==1))
   691  00C5  1E06               	btfss	6,4	;volatile
   692  00C6  1E86               	btfss	6,5	;volatile
   693  00C7  28D4               	goto	i1l55
   694                           
   695                           ;main.c: 45: {
   696                           ;main.c: 46: data[i]=0;
   697  00C8  083A               	movf	_i,w
   698  00C9  3E20               	addlw	_data& (0+255)
   699  00CA  0084               	movwf	4
   700  00CB  1383               	bcf	3,7	;select IRP bank0
   701  00CC  0180               	clrf	0
   702                           
   703                           ;main.c: 47: while((RB4==0)&&(RB5==1)){RB0 = 1;}
   704  00CD  28CF               	goto	i1l56
   705  00CE                     i1l57:	
   706  00CE  1406               	bsf	6,0	;volatile
   707  00CF                     i1l56:	
   708  00CF  1A06               	btfsc	6,4	;volatile
   709  00D0  28E3               	goto	i1l690
   710  00D1  1A86               	btfsc	6,5	;volatile
   711  00D2  28CE               	goto	i1l57
   712  00D3  28E3               	goto	i1l690
   713  00D4                     i1l55:	
   714                           ;main.c: 50: }
   715                           
   716                           ;main.c: 49: INTCONbits.RBIF = 0;
   717                           
   718                           ;main.c: 48: i++;
   719                           
   720                           
   721                           ;main.c: 51: else if ((RB4==1)&&(RB5==0))
   722  00D4  1A06               	btfsc	6,4	;volatile
   723  00D5  1A86               	btfsc	6,5	;volatile
   724  00D6  28EA               	goto	i1l68
   725                           
   726                           ;main.c: 52: {
   727                           ;main.c: 53: data[i]=1;
   728  00D7  083A               	movf	_i,w
   729  00D8  3E20               	addlw	_data& (0+255)
   730  00D9  0084               	movwf	4
   731  00DA  1383               	bcf	3,7	;select IRP bank0
   732  00DB  0180               	clrf	0
   733  00DC  0A80               	incf	0,f
   734                           
   735                           ;main.c: 54: while((RB4==1)&&(RB5==0)){RB0 = 1;}
   736  00DD  28DF               	goto	i1l63
   737  00DE                     i1l64:	
   738  00DE  1406               	bsf	6,0	;volatile
   739  00DF                     i1l63:	
   740  00DF  1E06               	btfss	6,4	;volatile
   741  00E0  28E3               	goto	i1l690
   742  00E1  1E86               	btfss	6,5	;volatile
   743  00E2  28DE               	goto	i1l64
   744  00E3                     i1l690:	
   745                           
   746                           ;main.c: 55: i++;
   747  00E3  3001               	movlw	1
   748  00E4  07BA               	addwf	_i,f
   749  00E5  1803               	skipnc
   750  00E6  0ABB               	incf	_i+1,f
   751  00E7  3000               	movlw	0
   752  00E8  07BB               	addwf	_i+1,f
   753                           
   754                           ;main.c: 56: INTCONbits.RBIF = 0;
   755  00E9  100B               	bcf	11,0	;volatile
   756  00EA                     i1l68:	
   757  00EA  0875               	movf	??_catchInterrupts+5,w
   758  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   759  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   760  00ED  00FF               	movwf	127
   761  00EE  0874               	movf	??_catchInterrupts+4,w
   762  00EF  008A               	movwf	10
   763  00F0  0873               	movf	??_catchInterrupts+3,w
   764  00F1  0084               	movwf	4
   765  00F2  0E72               	swapf	(??_catchInterrupts+2)^(0+-128),w
   766  00F3  0083               	movwf	3
   767  00F4  0EFE               	swapf	126,f
   768  00F5  0E7E               	swapf	126,w
   769  00F6  0009               	retfie
   770  00F7                     __end_of_catchInterrupts:	
   771  007E                     btemp	set	126	;btemp
   772  007E                     wtemp	set	126
   773  007E                     wtemp0	set	126
   774  0080                     wtemp1	set	128
   775  0082                     wtemp2	set	130
   776  0084                     wtemp3	set	132
   777  0086                     wtemp4	set	134
   778  0088                     wtemp5	set	136
   779  007F                     wtemp6	set	127
   780  007E                     ttemp	set	126
   781  007E                     ttemp0	set	126
   782  0081                     ttemp1	set	129
   783  0084                     ttemp2	set	132
   784  0087                     ttemp3	set	135
   785  007F                     ttemp4	set	127
   786  007E                     ltemp	set	126
   787  007E                     ltemp0	set	126
   788  0082                     ltemp1	set	130
   789  0086                     ltemp2	set	134
   790  0080                     ltemp3	set	128
   791                           
   792                           	psect	intentry
   793  0004                     __pintentry:	
   794                           ;incstack = 0
   795                           ; Regs used in _catchInterrupts: [wreg-fsr0h+status,2+status,0]
   796                           
   797  0004                     interrupt_function:	
   798  007E                     saved_w	set	btemp
   799  0004  00FE               	movwf	btemp
   800  0005  0E03               	swapf	3,w
   801  0006  00F2               	movwf	??_catchInterrupts+2
   802  0007  0804               	movf	4,w
   803  0008  00F3               	movwf	??_catchInterrupts+3
   804  0009  080A               	movf	10,w
   805  000A  00F4               	movwf	??_catchInterrupts+4
   806  000B  1283               	bcf	3,5	;RP0=0, select bank0
   807  000C  1303               	bcf	3,6	;RP1=0, select bank0
   808  000D  087F               	movf	btemp+1,w
   809  000E  00F5               	movwf	??_catchInterrupts+5
   810  000F  120A  118A  28A3   	ljmp	_catchInterrupts


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      8      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _catchInterrupts in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _catchInterrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _catchInterrupts in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _catchInterrupts in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _catchInterrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     130
                                              0 BANK0      8     4      4
                _UART_Initialization
                 _portBConfiguration
              _setupInterrupRoutines
 ---------------------------------------------------------------------------------
 (1) _setupInterrupRoutines                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portBConfiguration                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialization                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _catchInterrupts                                      6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialization
   _portBConfiguration
   _setupInterrupRoutines

 _catchInterrupts (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jan  8 00:24:53 2015

                             _i 003A                     __CFG_CP$OFF 0000                              fsr 0004  
   __size_of_portBConfiguration 0006                             l750 0051                             l736 0030  
                           l754 0059                             l746 0045                             l758 007A  
                           _GIE 005F                             _RB0 0030                             _RB1 0031  
                           _RB4 0034                             _RB5 0035                             u407 0099  
                           u345 0043                    __CFG_CPD$OFF 0000                             u375 0078  
                           u387 0062                             u397 0087                             fsr0 0004  
                           indf 0000                    __CFG_FOSC$HS 0000                    __CFG_LVP$OFF 0000  
                  __CFG_WDTE$ON 0000                            _BRGH 04C2                            _CREN 00C4  
                          i1l63 00DF                            i1l55 00D4                            i1l64 00DE  
                          i1l56 00CF                            i1l57 00CE                            i1l68 00EA  
                          _SPEN 00C7                            _TXEN 04C5                            _SYNC 04C4  
       __end_of_catchInterrupts 00F7                    __CFG_WRT$OFF 0000                            _data 0020  
                          _main 0021                            btemp 007E                   __CFG_BOREN$ON 0000  
                          ltemp 007E                            start 0012                            ttemp 007E  
                          wtemp 007E                           ?_main 003C                           i1l690 00E3  
                         i1l668 00BA                           _RCREG 001A                           u41_27 00B5  
                         _SPBRG 0099                           _TRISB 0086                           _TXREG 0019  
                         _nRBPU 040F                           main@x 0042                           pclath 000A  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 0015  
                  __end_of_main 00A3                          ??_main 0040                ?_catchInterrupts 0070  
                        _TRISC6 043E                          _TRISC7 043F                  __CFG_PWRTE$OFF 0000  
           _UART_Initialization 00F7                          saved_w 007E            ?_UART_Initialization 0070  
       __end_of__initialization 001D           _setupInterrupRoutines 0113                  __pcstackCOMMON 0070  
                    __pbssBANK0 0020           ??_UART_Initialization 0076                      __pmaintext 0021  
    __end_of_portBConfiguration 0120                      __pintentry 0004          ?_setupInterrupRoutines 0070  
                       __ptext0 0000                         __ptext1 0113                         __ptext2 011A  
                       __ptext3 00F7                         __ptext4 00A3                         clrloop0 010C  
          end_of_initialization 001D                      _serialData 0076                       _TXSTAbits 0098  
      __size_of_catchInterrupts 0054             start_initialization 0015                     __pbssCOMMON 0076  
                     ___latbits 0002     __end_of_UART_Initialization 010B                   __pcstackBANK0 003C  
            _portBConfiguration 011A         ??_setupInterrupRoutines 0076             ?_portBConfiguration 0070  
          ??_portBConfiguration 0076               ??_catchInterrupts 0070               interrupt_function 0004  
                     clear_ram0 010B                        _PIE1bits 008C                        _PIR1bits 000C  
                 __size_of_main 0082                        main@argc 003C                        main@argv 003E  
                    _INTCONbits 000B  __size_of_setupInterrupRoutines 0007   __end_of_setupInterrupRoutines 011A  
                      intlevel1 0000                 _catchInterrupts 00A3    __size_of_UART_Initialization 0014  
